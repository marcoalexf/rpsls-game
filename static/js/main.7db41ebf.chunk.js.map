{"version":3,"sources":["features/game/PlayerChoices.ts","features/game/GameScreens.ts","features/game/gameSlice.ts","features/game/index.ts","features/game/initialState.ts","features/game/MoveButton.tsx","features/game/PlayerMoves.ts","features/game/Game.tsx","features/game/ResultScreen.tsx","features/menu/MenuOption.tsx","store.ts","features/menu/MenuButtons.ts","features/menu/Menu.tsx","features/countdown/Countdown.tsx","App.tsx","index.tsx"],"names":["PlayerChoices","GameScreens","game","createSlice","name","initialState","reducers","changeScreen","state","action","payload","MENU","GAME_SCREEN","cpuChoice","UNDEFINED","playerChoice","playerWon","screen","playerAction","countdownActive","COUNTDOWN","playerLost","activateCountdown","deactivateCountdown","playerMove","cpuMove","PlayerMoves","Math","floor","random","move","winsAgainst","filter","el","length","LOST_SCREEN","loosesTo","VICTORY_SCREEN","TIE_SCREEN","actions","MoveButton","title","console","log","color","className","onClick","e","icon","animation","ROCK","PAPER","SPOCK","SCISSORS","LIZARD","Game","props","dispatch","useDispatch","map","ResultScreen","result","useSelector","MenuOption","configureStore","reducer","gameReducer","MenuButtons","store","Menu","button","Countdown","useState","timer","setTimer","useEffect","interval","setInterval","clearInterval","renderScreen","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7db41ebf.chunk.js","sourcesContent":["export enum PlayerChoices {\r\n    ROCK = 'ROCK',\r\n    PAPER = 'PAPER',\r\n    SCISSORS = 'SCISSORS',\r\n    LIZARD = 'LIZARD',\r\n    SPOCK = 'SPOCK',\r\n    UNDEFINED = '',\r\n}","export enum GameScreens {\r\n    MENU,\r\n    GAME_SCREEN,\r\n    VICTORY_SCREEN,\r\n    LOST_SCREEN,\r\n    TIE_SCREEN,\r\n    COUNTDOWN,\r\n    UNDEFINED,\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { GameScreens } from './GameScreens'\r\nimport initialState from './initialState'\r\nimport { PlayerChoices } from './PlayerChoices'\r\nimport PlayerMoves from './PlayerMoves'\r\n\r\nexport const game = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    changeScreen: (state, action) => {\r\n      if (action.payload === GameScreens.MENU || action.payload === GameScreens.GAME_SCREEN) {\r\n        state.cpuChoice = PlayerChoices.UNDEFINED\r\n        state.playerChoice = PlayerChoices.UNDEFINED\r\n        state.playerWon = -2\r\n      }\r\n      state.screen = action.payload\r\n    },\r\n    playerAction: (state, action) => {\r\n      state.playerChoice = action.payload\r\n      state.countdownActive = true\r\n      state.screen = GameScreens.COUNTDOWN\r\n    },\r\n    playerWon: (state) => {\r\n      state.playerWon = 1\r\n    },\r\n    playerLost: (state) => {\r\n      state.playerWon = -1\r\n    },\r\n    activateCountdown: (state) => {\r\n        state.countdownActive = true\r\n    },\r\n    deactivateCountdown: (state) => {\r\n      const playerMove = state.playerChoice\r\n      state.countdownActive = false\r\n      const cpuMove = PlayerMoves[(Math.floor(Math.random() * 5))]\r\n      state.cpuChoice = cpuMove.move\r\n      if (cpuMove.winsAgainst.filter(el => el === playerMove).length > 0) {\r\n        // cpu won\r\n        state.playerWon = 0\r\n        state.screen = GameScreens.LOST_SCREEN\r\n      } else if (cpuMove.loosesTo.filter(el => el === playerMove).length > 0) {\r\n        // player won\r\n        state.playerWon = 1\r\n        state.screen = GameScreens.VICTORY_SCREEN\r\n      } else {\r\n        // tie\r\n        state.playerWon = -1\r\n        state.screen = GameScreens.TIE_SCREEN\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport const { changeScreen, playerAction, playerWon, playerLost, activateCountdown, deactivateCountdown } = game.actions\r\n\r\nexport default game.reducer","export * from './gameSlice'\r\nexport * from './GameScreens'\r\nexport * from './GameState'\r\nexport * from './PlayerChoices'\r\nexport * from './initialState'\r\nexport * from './Game'\r\nexport * from './MoveButton'\r\nexport * from './ResultScreen'","import { GameScreens } from './GameScreens';\r\nimport GameState from './GameState';\r\nimport { PlayerChoices } from './PlayerChoices';\r\n\r\nconst initialState: GameState = {\r\n    screen: GameScreens.MENU,\r\n    playerChoice: PlayerChoices.UNDEFINED,\r\n    cpuChoice: PlayerChoices.UNDEFINED,\r\n    playerWon: -2,\r\n    countdownActive: false,\r\n}\r\n\r\nexport default initialState;","import React from 'react'\r\n\r\ninterface Props {\r\n    title?: string,\r\n    action?: Function,\r\n    color?: string,\r\n}\r\n\r\nexport default function MoveButton({title = 'NO_TITLE', action = () => { console.log('ACTION_NOT_IMPLEMENTED')}, color = 'red'}: Props) {\r\n    return (\r\n        <button \r\n        className={`w-fit border-2 border-${color}-600 rounded-lg px-3 py-2 text-${color}-400 cursor-pointer hover:bg-${color}-600 hover:text-${color}-200 active:bg-gray-600 focus:outline-none`}\r\n        onClick={e => action()}\r\n        >\r\n            { title }\r\n        </button>\r\n    )\r\n}\r\n","import { PlayerChoices } from \"./PlayerChoices\";\r\nimport { PlayerMove } from \"./PlayerMoveI\";\r\n\r\nexport const PlayerMoves: PlayerMove[] = [\r\n    {\r\n        icon: '',\r\n        animation: '',\r\n        move: PlayerChoices.ROCK,\r\n        loosesTo: [PlayerChoices.PAPER, PlayerChoices.SPOCK],\r\n        winsAgainst: [PlayerChoices.SCISSORS, PlayerChoices.LIZARD],\r\n    },\r\n    {\r\n        icon: '',\r\n        animation: '',\r\n        move: PlayerChoices.PAPER,\r\n        loosesTo: [PlayerChoices.LIZARD, PlayerChoices.SCISSORS],\r\n        winsAgainst: [PlayerChoices.SPOCK, PlayerChoices.ROCK],\r\n    },\r\n    {\r\n        icon: '',\r\n        animation: '',\r\n        move: PlayerChoices.SCISSORS,\r\n        loosesTo: [PlayerChoices.SPOCK, PlayerChoices.ROCK],\r\n        winsAgainst: [PlayerChoices.PAPER, PlayerChoices.LIZARD],\r\n    },\r\n    {\r\n        icon: '',\r\n        animation: '',\r\n        move: PlayerChoices.LIZARD,\r\n        loosesTo: [PlayerChoices.SCISSORS, PlayerChoices.ROCK],\r\n        winsAgainst: [PlayerChoices.SPOCK, PlayerChoices.PAPER],\r\n    },\r\n    {\r\n        icon: '',\r\n        animation: '',\r\n        move: PlayerChoices.SPOCK,\r\n        loosesTo: [PlayerChoices.PAPER, PlayerChoices.LIZARD],\r\n        winsAgainst: [PlayerChoices.ROCK, PlayerChoices.SCISSORS],\r\n    },\r\n]\r\n\r\nexport default PlayerMoves","import React from 'react'\r\nimport { PlayerMove } from './PlayerMoveI'\r\nimport PlayerMoves from './PlayerMoves'\r\nimport MoveButton from './MoveButton'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activateCountdown, playerAction } from './gameSlice'\r\nimport { PlayerChoices } from './PlayerChoices'\r\n\r\nexport const Game = (props: any) => {\r\n    const moveSelected = (move: PlayerChoices) => {\r\n        dispatch(playerAction(move))\r\n    }\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"h-screen bg-gray-700 flex flex-col justify-center items-center space-y-4\" {...props}>\r\n            <h1 className=\"text-white text-xl\">Select your move!</h1>\r\n            <div className=\"flex flex-wrap space-x-2\">\r\n                {\r\n                    PlayerMoves.map((playerMove: PlayerMove) => <MoveButton\r\n                    key={playerMove.move}\r\n                    title={playerMove.move}\r\n                    action={() => moveSelected(playerMove.move)}\r\n                    ></MoveButton>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GameScreens } from './GameScreens'\r\nimport { changeScreen } from './gameSlice'\r\n\r\nexport const ResultScreen = () => {\r\n    const playerWon = useSelector((state: any) => state.game.playerWon)\r\n    const dispatch = useDispatch()\r\n    const matchResult = (result: number) => {\r\n        if (result === -1) return 'Tie'\r\n        if (result === 0) return 'Lost'\r\n        if (result === 1) return 'Win'\r\n    }\r\n    return (\r\n        <div className=\"h-screen bg-gray-700 flex flex-col justify-center items-center space-y-4\">\r\n            <h1 className=\"text-white text-xl\">It's a {matchResult(playerWon)}!</h1>\r\n            <button \r\n            className=\"w-fit border-2 \r\n            border-yellow-600 rounded-lg px-3 py-2 \r\n            text-yellow-400 cursor-pointer hover:bg-yellow-600 \r\n            hover:text-yellow-200 active:bg-gray-600 focus:outline-none\"\r\n            onClick={e => dispatch(changeScreen(GameScreens.GAME_SCREEN))}\r\n            >Play Again</button>\r\n            <button \r\n            className=\"w-fit border-2 \r\n            border-yellow-600 rounded-lg px-3 py-2 \r\n            text-yellow-400 cursor-pointer hover:bg-yellow-600 \r\n            hover:text-yellow-200 active:bg-gray-600 focus:outline-none\"\r\n            onClick={e => dispatch(changeScreen(GameScreens.MENU))}\r\n            >Return to Menu</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    title: string,\r\n    action: Function,\r\n}\r\n\r\nexport default function MenuOption({title = 'NO_TITLE', action = () => { console.log('ACTION_NOT_IMPLEMENTED')}}: Props) {\r\n    return (\r\n        <button \r\n        className=\"w-fit border-2 \r\n        border-yellow-600 rounded-lg px-3 py-2 \r\n        text-yellow-400 cursor-pointer hover:bg-yellow-600 \r\n        hover:text-yellow-200 active:bg-gray-600 focus:outline-none\"\r\n        onClick={e => action()}\r\n        >\r\n            { title }\r\n        </button>\r\n    )\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport gameReducer from './features/game/gameSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    game: gameReducer\r\n  },\r\n})","import { GameScreens } from '../game/GameScreens'\r\nimport { changeScreen } from '../game/gameSlice'\r\nimport store from '../../store'\r\n\r\nexport const MenuButtons = [\r\n    { \r\n        title: 'Start Game',\r\n        action: () => store.dispatch(changeScreen(GameScreens.GAME_SCREEN))\r\n    },\r\n]\r\n\r\nexport default MenuButtons","import React from 'react'\r\nimport MenuOption from './MenuOption'\r\nimport MenuButtons from './MenuButtons'\r\n\r\nexport const Menu = (props: any) => {\r\n    return (\r\n        <div className=\"h-screen bg-gray-700 flex flex-col justify-center items-center space-y-4\" {...props}>\r\n            <h1 className=\"text-white text-xl text-yellow-500\">Welcome to Rock-Paper-Scissors-Lizard-Spock!</h1>\r\n            { MenuButtons.map(button => <MenuOption key={button.title} title={button.title} action={button.action}/>) }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deactivateCountdown } from '../game/gameSlice'\r\n\r\nexport const Countdown = (props: any) => {\r\n    const [timer, setTimer] = useState(3)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimer(timer => timer - 1)\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (timer === 0) {\r\n            dispatch(deactivateCountdown())\r\n        }\r\n    }, [timer])\r\n    return (\r\n        <div className=\"h-screen bg-gray-700 flex flex-col justify-center items-center space-y-4\" {...props}>\r\n            <h1 className=\"text-white text-xl\">Move selected! CPU Playing..</h1>\r\n            <p className=\"text-white\">{timer}</p>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport { GameScreens, Game, ResultScreen } from './features/game';\r\nimport { Menu } from './features/menu'\r\nimport { Countdown } from './features/countdown/Countdown'\r\n\r\nconst renderScreen = (screen: GameScreens) => {\r\n  switch (screen) {\r\n    case GameScreens.COUNTDOWN:\r\n      return <Countdown />\r\n    case GameScreens.VICTORY_SCREEN:\r\n    case GameScreens.LOST_SCREEN:\r\n    case GameScreens.TIE_SCREEN:\r\n      return <ResultScreen></ResultScreen>\r\n    case GameScreens.GAME_SCREEN:\r\n      return (\r\n        <Game />\r\n      )\r\n    case GameScreens.MENU:\r\n    default:\r\n      return <Menu />\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const screen = useSelector((state: any) => state.game.screen)\r\n  return (\r\n    <div className=\"App\">\r\n      { renderScreen(screen) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}